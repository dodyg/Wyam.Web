@{
	string currentFolder = new string(Model.String("RelativeFilePath", string.Empty).TakeWhile(x => x != '\\' && x != '/').ToArray());
	foreach(IGrouping<string, IDocument> categoryGroup in Documents
		.Where(x => x.ContainsKey("RelativeFilePath")
	        && !x.String("RelativeFilePath").EndsWith("index.md") 
	        && !x.String("RelativeFilePath").EndsWith("index.cshtml") 
	        && x.String("RelativeFilePath").StartsWith(currentFolder))
		.GroupBy(x => x.String("Category"))
		.OrderBy(x => x.Key))
	{
		if(!string.IsNullOrWhiteSpace(categoryGroup.Key))
		{
			<h1>@categoryGroup.Key</h1>
			<hr />
		}
		foreach(IDocument childDoc in categoryGroup
			.OrderBy(x => x.Get<int>("Order", 1000))
			.ThenBy(x => x.String("Title")))
		{
			<h2>
				<strong><a href="@PathHelper.ToRootLink(PathHelper.RemoveExtension(childDoc.String("RelativeFilePath")))">@(childDoc.String("Title", childDoc.String("SourceFileBase")))</a></strong>
				@{
					if(childDoc.ContainsKey("Description"))
					{
						<small>@(childDoc.String("Description"))</small>
					}					
				}
			</h2>
		}
	}
}